name:  Tests Coverage

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: app_test
          POSTGRES_USER: laravel
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: pgsql, mbstring, xml, curl, dom, fileinfo, intl, json, zip, pcov
        coverage: pcov
        tools: composer

    - name: Install dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Create .env file
      working-directory: ./backend
      run: |
        cp .env.dev.example .env
        echo "APP_KEY=base64:$(openssl rand -base64 32)" >> .env

    - name: Generate application key
      working-directory: ./backend
      run: php artisan key:generate

    - name: Wait for PostgreSQL
      run: sleep 10

    - name: Run tests with coverage
      working-directory: ./backend
      env:
        DB_TEST_HOST: localhost
        DB_TEST_PORT: 5432
        DB_TEST_DATABASE: app_test
        DB_TEST_USERNAME: laravel
        DB_TEST_PASSWORD: secret
      run: |
        # Генерируем clover отчет
        ./vendor/bin/phpunit --coverage-clover=coverage.xml
        # Генерируем HTML отчет
        ./vendor/bin/phpunit --coverage-html=storage/coverage

    - name: Extract coverage percentage
      id: coverage
      working-directory: ./backend
      run: |
        # Извлекаем процент покрытия из XML
        if [ -f "coverage.xml" ]; then
          COVERAGE=$(grep -o 'line-rate="[0-9.]*"' coverage.xml | head -1 | cut -d'"' -f2)
          if [ ! -z "$COVERAGE" ]; then
            # Преобразуем в процент без bc (альтернативный способ)
            COVERAGE_PERCENT=$(awk "BEGIN {printf \"%.0f\", $COVERAGE * 100}")
            echo "COVERAGE_PERCENT=$COVERAGE_PERCENT" >> $GITHUB_ENV
            echo "Coverage: $COVERAGE_PERCENT%"
          else
            echo "COVERAGE_PERCENT=0" >> $GITHUB_ENV
            echo "Coverage data not found"
          fi
        else
          echo "COVERAGE_PERCENT=0" >> $GITHUB_ENV
          echo "coverage.xml not found"
        fi

    - name: Display coverage results
      run: |
        echo "=============================================="
        echo "📊 TEST COVERAGE RESULTS"
        echo "=============================================="
        echo ""
        echo "Percentage: $COVERAGE_PERCENT%"
        echo ""
        echo "Add this to your README.md:"
        echo ""
        echo "## Test Coverage"
        echo ""
        echo "[![Test Coverage](https://img.shields.io/badge/coverage-$COVERAGE_PERCENT%25-blue)](https://github.com/$GITHUB_REPOSITORY/actions)"
        echo ""
        echo "- **Latest Run**: [View Details](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)"
        echo "- **HTML Report**: Download from Artifacts"
        echo ""
        echo "=============================================="